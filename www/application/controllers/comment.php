<?php defined('SYSPATH') OR die('No direct access allowed.');
/**
 * Default Kohana controller. This controller should NOT be used in production.
 * It is for demonstration purposes only!
 *
 * @package    Core
 * @author     Kohana Team
 * @copyright  (c) 2007-2008 Kohana Team
 * @license    http://kohanaphp.com/license.html
 */
class Comment_Controller extends Template_Controller {

	// Disable this controller when Kohana is set to production mode.
	// See http://docs.kohanaphp.com/installation/deployment for more details.
	const ALLOW_PRODUCTION = FALSE;

	// Set the name of the template to use
	public $template = 'template';
	protected $db;

	public function __construct(){
		parent::__construct(); // This must be included
        $env = Kohana::config("config.environment");
		$this->db = new Database($env);
	}

	public function index()
	{
		/*
		 * Useful snippets
		 * 	$this->template->content->test .= Kohana::debug($xml);
		 *  kohana::log("debug",Kohana::debug($post));
		 */
	}
    public function obfuscateUserName(){
        echo json_encode(array("username"=>base64_encode($this->input->post("username","unknown"))));
        exit;
    }
    public function makeComment(){
        $sessToken = $this->session->get("token");
        if($sessToken == $this->input->post("token")){
            $userName = base64_decode($this->input->post("username"));
            $commentObj = new Comment_Model();
            $commentObj->author = $userName;
            $commentObj->body = $this->input->post("body");
            $commentObj->timeLineRef = $this->input->post("time_line_ref");
            $this->thankForComment();
        }else{
            kohana::log("debug","Invalid token detected in comment submission");
            $this->failForComment();
        }
    }

    public function thankForComment(){

    }
    public function failForComment(){

    }
	public function __call($method, $arguments)
	{
		// Disable auto-rendering
		$this->auto_render = FALSE;

		// By defining a __call method, all pages routed to this controller
		// that result in 404 errors will be handled by this method, instead of
		// being displayed as "Page Not Found" errors.
		echo 'This text is generated by __call. If you expected the index page, you need to use: welcome/index/'.substr(Router::$current_uri, 8);
	}

} // End Welcome Controller