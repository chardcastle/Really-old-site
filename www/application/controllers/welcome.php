<?php defined('SYSPATH') OR die('No direct access allowed.');
/**
 * Default Kohana controller. This controller should NOT be used in production.
 * It is for demonstration purposes only!
 *
 * @package    Core
 * @author     Kohana Team
 * @copyright  (c) 2007-2008 Kohana Team
 * @license    http://kohanaphp.com/license.html
 */
class Welcome_Controller extends Template_Controller {

	// Disable this controller when Kohana is set to production mode.
	// See http://docs.kohanaphp.com/installation/deployment for more details.
	const ALLOW_PRODUCTION = FALSE;

	// Set the name of the template to use
	public $template = 'kohana/template';
	public $pagination = "";
	public $links = array();
	protected $db;
	private $result = array();	
	
	public function __construct(){		
		parent::__construct(); // This must be included		
		$this->db = new Database('local');
		$this->links = array
		(
			'Home Page'     => 'http://kohanaphp.com/',
			'Documentation' => 'http://docs.kohanaphp.com/',
			'Forum'         => 'http://forum.kohanaphp.com/',
			'License'       => 'Kohana License.html',
			'Donate'        => 'http://kohanaphp.com/donate'			
		);
		
		$this->pagination = new Pagination(array(
		    // 'base_url'    => 'welcome/pagination_example/page/', // base_url will default to current uri
		    'uri_segment'    => 'page', // pass a string as uri_segment to trigger former 'label' functionality
		    'total_items'    => $this->db->count_records("kh_timeline")/10, // use db count query here of course
		    'items_per_page' => 10, // it may be handy to set defaults for stuff like this in config/pagination.php
		    'style'          => 'classic' // pick one from: classic (default), digg, extended, punbb, or add your own!		
		));		
	}
	
	public function index()
	{
		/*
		 * Useful snippets
		 * 	$this->template->content->test .= Kohana::debug($xml);
		 *  kohana::log("debug",Kohana::debug($post));	
		 */
		// Load database
		
		// Load template
		$this->template->content = new View('welcome_content');
		$postObj = new Post_Model;		
		// You can assign anything variable to a view by using standard OOP
		// methods. In my welcome view, the $title variable will be assigned
		// the value I give it here.
		$this->template->title = 'Welcome to Kohana!';

		// An array of links to display. Assiging variables to views is completely
		// asyncronous. Variables can be set in any order, and can be any type
		// of data, including objects.
		$this->template->content->links = $this->links;

		$this->template->content->hotlinks = $this->pagination->render("digg");
		$mostRecentPost = $this->db->select("*")
		->from("kh_timeline")		
		->limit(9)
		->orderby("id","desc")
		->get()
		->result_array(true);

		$this->template->content->posts = $mostRecentPost;		
		
	}
	public function page($pageId){
		$this->template->content = new View('welcome_content');
		$this->template->content->links = $this->links;
		$this->template->content->hotlinks = $this->pagination->render();
		$start = $pageId * 10;
		$this->template->content->posts = $this->db->select("*")
		->from("kh_timeline")		
		->limit($start,10)
		->orderby("id","desc")
		->get()
		->result_array(true);

		$this->template->title = 'Welcome to Kohana!';
	}
	/*
	 * To be called by cron
	 * */
	public function saveNewPosts(){		
		$postObj = new Post_Model;		
		$inserts = $postObj->searchForNewPosts();
		echo "The function 'saveNewPosts' has run and ".Kohana::debug($inserts)." records have been added.";
		exit;
	}
	/*
	 * To be called by cron
	 * */	
	public function digestNewPosts(){
		$postObj = new Post_Model;
		$postObj->digestNewPosts();
		echo "The system has digested the posts tabel. HTML is now refreshed.";
		exit;
	}

	public function __call($method, $arguments)
	{
		// Disable auto-rendering
		$this->auto_render = FALSE;

		// By defining a __call method, all pages routed to this controller
		// that result in 404 errors will be handled by this method, instead of
		// being displayed as "Page Not Found" errors.
		echo 'This text is generated by __call. If you expected the index page, you need to use: welcome/index/'.substr(Router::$current_uri, 8);
	}

} // End Welcome Controller