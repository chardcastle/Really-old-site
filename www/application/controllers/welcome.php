<?php defined('SYSPATH') OR die('No direct access allowed.');
/**
 * Default Kohana controller. This controller should NOT be used in production.
 * It is for demonstration purposes only!
 *
 * @package    Core
 * @author     Kohana Team
 * @copyright  (c) 2007-2008 Kohana Team
 * @license    http://kohanaphp.com/license.html
 */
class Welcome_Controller extends Template_Controller {

	// Disable this controller when Kohana is set to production mode.
	// See http://docs.kohanaphp.com/installation/deployment for more details.
	const ALLOW_PRODUCTION = FALSE;

	// Set the name of the template to use
	public $template = 'kohana/template';

	public function index()
	{
		// In Kohana, all views are loaded and treated as objects.
		$this->template->content = new View('welcome_content');

		// You can assign anything variable to a view by using standard OOP
		// methods. In my welcome view, the $title variable will be assigned
		// the value I give it here.
		$this->template->title = 'Welcome to Kohana!';

		// An array of links to display. Assiging variables to views is completely
		// asyncronous. Variables can be set in any order, and can be any type
		// of data, including objects.
		$this->template->content->links = array
		(
			'Home Page'     => 'http://kohanaphp.com/',
			'Documentation' => 'http://docs.kohanaphp.com/',
			'Forum'         => 'http://forum.kohanaphp.com/',
			'License'       => 'Kohana License.html',
			'Donate'        => 'http://kohanaphp.com/donate',
		);
		$this->template->test = "";
		foreach (array('agent', 'browser', 'version') as $key)
		{
			$this->template->content->test = $key.': '.Kohana::user_agent($key).'<br/>'."\n";
		}

		$this->template->content->test .=  "<br/><br/>\n";
		$this->template->content->test .= 'done in {execution_time} seconds';	

		// Parse an external atom feed		
		$myTummy = feed::parse('http://hardcastle.tumblr.com/rss');
		$myTweets = file_get_contents('https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20twitter.user.timeline%20where%20id%3D%22hardcastle%22&format=xml&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys');
		$jQueryfeed = file_get_contents("http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20github.repo.commits%20where%20id%3D'jquery'%20and%20repo%3D'jquery'&format=xml&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys");
		$xml = new SimpleXMLElement($jQueryfeed);
		//$this->template->content->test .= Kohana::debug($xml);
		$this->template->content->test .= "<h2>Jquery dev</h2>";
		foreach($xml->results->commits as $post){
			//kohana::log("debug",Kohana::debug($post));
			foreach($post as $commit){
				//$date = str_replace("T"," ",$commit->{"committed-date"});
				$date = $commit->{"committed-date"};
				$this->template->content->test .= "<pre>".date("dS m h:m",strtotime($date)).$commit->message."</pre>";				
			}
			//$this->template->content->test .= Kohana::debug($post->message);			
		}
		$xml = new SimpleXMLElement($myTweets);
		//$this->template->content->test .= Kohana::debug($xml);
		$this->template->content->test .= "<h2>Twitter</h2>";
		foreach($xml->results->entry as $post){
			kohana::log("debug",Kohana::debug($post));
			/*foreach($post as $tweet){
				$this->template->content->test .= "<pre>".$tweet->content."</pre>";				
			}*/			
			$this->template->content->test .= "<pre>".date("dS m h:m",strtotime($post->published)).$post->content."</pre>";			
			//$this->template->content->test .= Kohana::debug($post->message);			
		}		
		$this->template->content->test .= "<h2>Tumblr</h2>";
		foreach($myTummy as $post){
			$this->template->content->test .= "<pre>".$post["description"]."</pre>";			
		}
		//$this->template->content->test = $xml->commit->message;
		// Show debug info
		//$this->template->content->test .= Kohana::debug($xml);

		$this->template->content->test .= Kohana::lang('core.stats_footer');
	}

	public function __call($method, $arguments)
	{
		// Disable auto-rendering
		$this->auto_render = FALSE;

		// By defining a __call method, all pages routed to this controller
		// that result in 404 errors will be handled by this method, instead of
		// being displayed as "Page Not Found" errors.
		echo 'This text is generated by __call. If you expected the index page, you need to use: welcome/index/'.substr(Router::$current_uri, 8);
	}

} // End Welcome Controller